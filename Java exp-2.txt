class Video {
    private String title;
    private boolean checkedOut;
    private double avgRating;
    private int ratingCount;
    private int totalRating;

    public Video(String title) {
        this.title = title;
        this.checkedOut = false;
        this.avgRating = 0.0;
        this.ratingCount = 0;
        this.totalRating = 0;
    }

    public void checkOut() {
        if (!checkedOut) {
            checkedOut = true;
            System.out.println(title + " has been checked out.");
        } else {
            System.out.println(title + " is already checked out.");
        }
    }

    public void returnVideo() {
        if (checkedOut) {
            checkedOut = false;
            System.out.println(title + " has been returned.");
        } else {
            System.out.println(title + " was not checked out.");
        }
    }

    public void receiveRating(int rating) {
        if (rating >= 1 && rating <= 5) {
            totalRating += rating;
            ratingCount++;
            avgRating = (double) totalRating / ratingCount;
            System.out.println("Rating " + rating + " added to " + title);
        } else {
            System.out.println("Invalid rating. Must be between 1 and 5.");
        }
    }

    public String getTitle() {
        return title;
    }

    public boolean isCheckedOut() {
        return checkedOut;
    }

    public double getAvgRating() {
        return avgRating;
    }
}

class VideoStore {
    private Video[] videos;
    private int count;

    public VideoStore() {
        videos = new Video[10];
        count = 0;
    }

    public void addVideo(String title) {
        if (count < videos.length) {
            videos[count++] = new Video(title);
            System.out.println("Added video: " + title);
        } else {
            System.out.println("Inventory full! Cannot add more videos.");
        }
    }

    public void checkOut(String title) {
        for (int i = 0; i < count; i++) {
            if (videos[i].getTitle().equalsIgnoreCase(title)) {
                videos[i].checkOut();
                return;
            }
        }
        System.out.println("Video not found: " + title);
    }

    public void returnVideo(String title) {
        for (int i = 0; i < count; i++) {
            if (videos[i].getTitle().equalsIgnoreCase(title)) {
                videos[i].returnVideo();
                return;
            }
        }
        System.out.println("Video not found: " + title);
    }

    public void receiveRating(String title, int rating) {
        for (int i = 0; i < count; i++) {
            if (videos[i].getTitle().equalsIgnoreCase(title)) {
                videos[i].receiveRating(rating);
                return;
            }
        }
        System.out.println("Video not found: " + title);
    }

    public void listInventory() {
        System.out.println("\nInventory:");
        for (int i = 0; i < count; i++) {
            System.out.println("Title: " + videos[i].getTitle() + ", Checked Out: " + videos[i].isCheckedOut() + ", Average Rating: " + videos[i].getAvgRating());
        }
    }
}

public class VideoStoreLauncher {
    public static void main(String[] args) {
        VideoStore store = new VideoStore();

        store.addVideo("Housefull");
        store.addVideo("Race");
        store.addVideo("Jawaan");

        store.receiveRating("Housefull", 5);
        store.receiveRating("Housefull", 4);
        store.receiveRating("Race", 5);
        store.receiveRating("Race", 5);
        store.receiveRating("Jawaan", 3);

        store.checkOut("Housefull");
        store.returnVideo("Race");
        store.checkOut("Jawaan");

        store.listInventory();
    }
}